name: ci

on:
  push:
    branches:
      - prod
      - staging

env:
  REGISTRY_URL: YOUR_REGISTRY_URL

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Generate random tag
        id: generate_tag
        run: |
          echo "::set-output name=random_tag::random-${{ github.sha }}"
          echo "::set-output name=branch_tag::${GITHUB_REF##*/}"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          # target: server  # for multi-stage builds
          push: true
          # tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          # tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest,${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.generate_tag.outputs.random_tag }}
          tags: ${{ REGISTRY_URL }}/${{ github.event.repository.name }}:${{ steps.generate_tag.outputs.branch_tag }}
          platforms: linux/amd64,linux/arm64

      # - name: SSH and update
      #   uses: cssnr/stack-deploy-action@v1
      #   with:
      #     host: ${{ secrets.DOCKER_CLUSTER_HOST }}
      #     user: ${{ secrets.DOCKER_CLUSTER_USER }}
      #     ssh_key: ${{ secrets.DOCKER_CLUSTER_SSH_PRIVATE_KEY }}
      #     file: "docker-compose.swarm.yml"
      #     name: "${{ github.event.repository.name }}" # stack name is same as repo
